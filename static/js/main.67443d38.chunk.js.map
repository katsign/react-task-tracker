{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","fontSize","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67443d38.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      style={{ backgroundColor: color }}\r\n      className=\"btn\"\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.defaultProps = {\r\n  color: 'linen',\r\n};\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  color: PropTypes.string,\r\n  onClick: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Button;\r\n","import PropTypes from 'prop-types';\r\nimport Button from './Button';\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n  return (\r\n    <header className='header'>\r\n      <h1>{title}</h1>\r\n      <Button color={showAdd ? '#060e1d' : '#8fa9ab'} text={showAdd ? 'Close' : 'Add'} onClick={onAdd} />\r\n    </header>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  title: 'Task Tracker',\r\n};\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import { FaTimes } from 'react-icons/fa';\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n  return (\r\n    <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\r\n      <h3>\r\n        {task.text}{' '}\r\n        <FaTimes\r\n          style={{ color: 'gray', cursor: 'pointer', fontSize: '12px' }}\r\n          onClick={() => onDelete(task.id)}\r\n          onToggle={onToggle}\r\n        />\r\n      </h3>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n  return (\r\n    <>\r\n      {tasks.map((task) => (\r\n        <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import { useState } from 'react'\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!text) {\r\n            alert('ðŸ‘» Cannot save ghost tasks...')\r\n            return\r\n        }\r\n\r\n        onAdd({ text, day, reminder })\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type='text' placeholder='Add Task' value={text} onChange={(e) => setText(e.target.value)} />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Day + Time</label>\r\n                <input type='text' placeholder='Add Day and Time' value={day} onChange={(e) => setDay(e.target.value)} />\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type='checkbox' checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}/>\r\n            </div>\r\n            <input type='submit' value='Save Task' className='btn btn-block'></input>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import { useState } from 'react';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\n\nfunction App() {\n\n  const [showAddTask, setShowAddTask] = useState (false)\n\n  const [tasks, setTasks] = useState([\n    { id: 1, text: 'Class tonight', day: 'Wednesday 6:30-9:30pm', reminder: true },\n    { id: 2, text: 'Fitness Tracker', day: 'April 13, midnight', reminder: true },\n    { id: 3, text: 'Final Project', day: 'May', reminder: false },\n  ]);\n\n  //Add Task\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1\n    const newTask = { id, ...task }\n    setTasks([...tasks, newTask])\n  }\n\n  //Delete Task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  //Toggle Reminder\n  const toggleReminder = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"main\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        'No tasks!'\n      )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}